<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8oGwAPh/P9ERJ+He6EAAAAAASUVORK5CYII=
</value>
  </data>
</root>